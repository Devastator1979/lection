// Преобразование типов 
// Явные преобразования типов и не явные преобразования типов
// 1. Тождественные преобразования - преобразование типа к самому себе
// 2. Примитивные тип расширения - операция перехода от более узкого типа
// к более широкому типу не приводит к побочным эффектам. Она является безопасной и поэтому выполянется
// в Java автоматически.
// 3. Примитивный тип Сужения - переход от типа с более широким диапазоном к типу
// с более узким диапазоном приводит к побочным эффектм. Является не безопасной операцией.
// выполнить можно только явно(принудительно). На первом этапе преобразование к вещественному типу
// int или long (отбрасывается вещественная часть). На втором этапе отбрасываются лишние биты.
// 4. Ссылочный тип Расширения
// 5. Ссылочный тип сужения
// 6. Преобразование к строке
// 7. Запрещщенные преобразования
package lection17;
public class Task01 {
    public static void main(String arg []){
        int i = 42;
        boolean b = (boolean)true;
        Integer i2 = new Integer (42);
        
        double d = 42;
        
        byte bt = (byte)1024;
        
        float f = 141.777f;
        byte b1 = (byte)f;
        double d1 = 5.1;
        double d2 = -d1/0;
        double d3 = d1/d2;
        System.out.println(b1);
        System.out.println(d2);
        System.out.println(d3);
        
        float f1 = 0f/0f;
        System.out.println(f1);
        float s = (float)(b1 * d2 * f1);
        System.out.println(s);
        if (d2<d3){
        System.out.println("true");
        }
        else{
            System.out.println("fols");
        }
        
    }
}
